name: Package Application

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  issues: write
  packages: write

jobs:
  build-and-package:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libasound2-dev ffmpeg libatlas-base-dev

    - name: Install Python dependencies
      run: |
        pip install -r ./backend/requirements.txt

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Build React application
      run: |
        cd web
        npm install
        npm run build

    - name: Move React build to backend
      run: |
        mkdir -p "./backend/web"
        rm -rf ./backend/web/*
        mv ./web/build/* ./backend/web/

    - name: Package Application
      run: |
        tar -czvf langiot-package.tar.gz ./backend ./Dockerfile ./README.md ./install.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: langiot-package
        path: langiot-package.tar.gz

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}        
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./langiot-package.tar.gz
        asset_name: langiot-package.tar.gz
        asset_content_type: application/gzip

    - name: Clean up
      run: rm -rf langiot-package.tar.gz
